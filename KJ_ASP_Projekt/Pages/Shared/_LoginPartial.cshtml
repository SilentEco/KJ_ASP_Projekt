@using Microsoft.AspNetCore.Identity

@inject SignInManager<Model.User> SignInManager
@inject UserManager<Model.User> UserManager



<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        if (User.IsInRole("organizer"))
        {
            <li class="nav-item btn btn-success blk-border mr-1">
                <a class="nav-link text-dark " asp-area="" asp-page="/Events/Create">Create Event</a>
            </li>
            <li class="nav-item btn btn-success blk-border mr-1">
                <a class="nav-link text-dark " asp-area="" asp-page="/Events/Index">Organize Events</a>
            </li>
        }
        if (User.IsInRole("admin"))
        {
            <li class="nav-item btn btn-danger blk-border mr-1">
                <a class="nav-link text-dark " asp-area="" asp-page="/Admin/UsersList">Manage Users</a>
            </li>

        }
        <li class="nav-item">       
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity.Name</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/", new { area = "" })" method="post">
                <button type="submit" class="nav-link btn btn-link text-dark remove-border">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
